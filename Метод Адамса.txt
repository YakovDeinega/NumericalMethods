import kotlin.math.*

fun f(k: Int, x: Double, y: Double): Double{
    if(k==1){
        return (2*x*y+x*y*y) //58
    }
    else if(k==2){
        return (y/x)+x*cos(x) //141
    }
    else if(k==3){
        return (((2*x+1)*y-y*y-x*x)/x) //169
    }
    else{
        return 0.0
    }
}
fun r_k(k: Int, t: Double, y: Double, h: Double): Double{
    var k1 = f(k, t, y)
    var k2 = f(k, t+h/2, y + (h/2)*k1)
    var k3 = f(k, t+h/2, y + (h/2)*k2)
    var k4 = f(k, t+h, y + (h * k3))
    return h*(k1+2*k2+2*k3+k4)/6+y
}
fun adams(k: Int, x:MutableList<Double>, eps: Double, u0: Double, h: Double): MutableList<Double>{
    var y: MutableList<Double> = MutableList(0){0.0}
    var n = x.size
    var yn_3 = u0
    var yn_2 = r_k(k, x[1], u0, h)
    var yn_1 = r_k(k, x[2], yn_2, h)
    y.add(yn_3)
    y.add(yn_2)
    y.add(yn_1)
    var yns1: Double
    var yns: Double
    for (i in 3..n-1){
        yns1 = y[i-1]+h*(23*f(k,x[i-1],y[i-1])-16*f(k,x[i-2],y[i-2])+5*f(k, x[i-3],y[i-3]))/12
        do{
            yns = yns1
            yns1 = y[i-1] + h*(9*f(k,x[i],yns)+19*f(k,x[i-1],y[i-1])-5*f(k,x[i-2],y[i-2])+f(k,x[i-3],y[i-3]))/24
        } while(abs(yns1-yns)>eps)
        y.add(yns1)
    }
    return y
}
fun main(){
    var example = 3
    var example_type = 1
    var x: MutableList<Double>
    var u0: Double
    var a: Double
    var b: Double
    var eps: Double = 1e-6
    var h: Double
    if(example==1){
        a=0.5
        b=4.9
        u0=-9.0
        if(example_type==1)
            h=0.1
        else
            h=0.2
    }
    else if(example==2){
        a=1.0
        b=9.0
        u0=0.841
        if(example_type==1)
            h=0.1
        else
            h=0.2
    }
    else{
        a=1.5
        b=5.1
        u0=1.59
        if(example_type==1){
            h=0.15
        }
        else
            h=0.3
    }
    x= MutableList(1){a}
    for (i in 1..((b-a)/h).toInt()){
        x.add(x[i-1]+h)
    }
    var y = adams(example, x, eps, u0, h)
    for (i in 0..y.size-1){
        println(y[i])
    }
}